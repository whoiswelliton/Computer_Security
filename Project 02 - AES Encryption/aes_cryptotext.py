# -*- coding: utf-8 -*-
"""AES Cryptotext.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HJ035xyO5JfDewNzJXg7B1zVm-vf49JO
"""

from google.colab import drive
drive.mount('/content/drive')

Path = "/content/drive/My Drive/Cryptowork"

pip install pycryptodome

from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
from Crypto.Util.Padding import pad, unpad

import os
import os.path
import io
import base64
from io import BytesIO, StringIO
from base64 import b64decode

#chave de 16 bytes
KEY = get_random_bytes(16)

#vetor de inicialização
IV = get_random_bytes(16)

print(KEY)
print(IV)

#String com o texto limpo
texto = b'menssagem ultra secreta enviada'

#txtoriginal = bytes(original, 'UTF-8')

#modos de operação para blocos simétricos
Mode1 = AES.MODE_ECB        #Electronic CodeBook
Mode2 = AES.MODE_CBC        #Ciphertext Block Chaining

cipher1 = AES.new(KEY, Mode1)
cipher2 = AES.new(KEY, Mode2, IV)

#encriptando o texto e armazenando na variável
#pad = garante múltiplos de 128 bits

ENC_txt1 = cipher1.encrypt(pad (texto, 16))
ENC_txt2 = cipher2.encrypt(pad (texto, 16))

print(ENC_txt1)
print(ENC_txt2)

#decriptando

cipher3 = AES.new(KEY, mode1)
cipher4 = AES.new(KEY, mode2, IV)

DEC_txt1 = unpad(cipher3.decrypt(ENC_txt1), 16)
DEC_txt2 = unpad(cipher4.decrypt(ENC_txt2), 16)

print(DEC_txt1)
print(DEC_txt2)